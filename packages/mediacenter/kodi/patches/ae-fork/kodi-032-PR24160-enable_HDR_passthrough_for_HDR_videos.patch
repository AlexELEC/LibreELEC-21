From fc04d6c5302d96c0b8c6fa18b7418b6e9c825fea Mon Sep 17 00:00:00 2001
From: smp79 <sergey79@gmail.com>
Date: Fri, 1 Dec 2023 01:06:29 +0300
Subject: [PATCH] LinuxRendererGLES: remove metadata info check for HDR
 passthrough and tonemapping

---
 .../VideoRenderers/LinuxRendererGLES.cpp      | 37 +++++--------------
 .../VideoRenderers/LinuxRendererGLES.h        |  9 -----
 2 files changed, 9 insertions(+), 37 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp
index 85ab951b111e8..ba565a7a6b84c 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp
@@ -132,12 +132,9 @@ bool CLinuxRendererGLES::Configure(const VideoPicture &picture, float fps, unsig
   // setup the background colour
   m_clearColour = CServiceBroker::GetWinSystem()->UseLimitedColor() ? (16.0f / 0xff) : 0.0f;
 
-  if (picture.hasDisplayMetadata && picture.hasLightMetadata)
-  {
-    m_passthroughHDR = CServiceBroker::GetWinSystem()->SetHDR(&picture);
-    CLog::Log(LOGDEBUG, "LinuxRendererGLES::Configure: HDR passthrough: {}",
-              m_passthroughHDR ? "on" : "off");
-  }
+  m_passthroughHDR = CServiceBroker::GetWinSystem()->SetHDR(&picture);
+  CLog::Log(LOGDEBUG, "LinuxRendererGLES::Configure: HDR passthrough: {}",
+            m_passthroughHDR ? "on" : "off");
 
   return true;
 }
@@ -172,14 +169,6 @@ void CLinuxRendererGLES::AddVideoPicture(const VideoPicture &picture, int index)
   buf.m_srcColSpace = picture.color_space;
   buf.m_srcFullRange = picture.color_range == 1;
   buf.m_srcBits = picture.colorBits;
-
-  buf.hasDisplayMetadata = picture.hasDisplayMetadata;
-  buf.displayMetadata = picture.displayMetadata;
-  buf.lightMetadata = picture.lightMetadata;
-  if (picture.hasLightMetadata && picture.lightMetadata.MaxCLL)
-  {
-    buf.hasLightMetadata = picture.hasLightMetadata;
-  }
 }
 
 void CLinuxRendererGLES::ReleaseBuffer(int idx)
@@ -851,10 +840,7 @@ void CLinuxRendererGLES::RenderSinglePass(int index, int field)
 
   if (!m_passthroughHDR && toneMapMethod != VS_TONEMAPMETHOD_OFF)
   {
-    if (buf.hasLightMetadata || (buf.hasDisplayMetadata && buf.displayMetadata.has_luminance))
-    {
-      toneMap = true;
-    }
+    toneMap = true;
   }
 
   if (toneMap != m_toneMap || toneMapMethod != m_toneMapMethod)
@@ -901,9 +887,8 @@ void CLinuxRendererGLES::RenderSinglePass(int index, int field)
   pYUVShader->SetContrast(m_videoSettings.m_Contrast * 0.02f);
   pYUVShader->SetWidth(planes[0].texwidth);
   pYUVShader->SetHeight(planes[0].texheight);
-  pYUVShader->SetColParams(buf.m_srcColSpace, buf.m_srcBits, !buf.m_srcFullRange, buf.m_srcTextureBits);
-  pYUVShader->SetDisplayMetadata(buf.hasDisplayMetadata, buf.displayMetadata,
-                                 buf.hasLightMetadata, buf.lightMetadata);
+  pYUVShader->SetColParams(buf.m_srcColSpace, buf.m_srcBits, !buf.m_srcFullRange,
+                           buf.m_srcTextureBits);
   pYUVShader->SetToneMapParam(m_videoSettings.m_ToneMapParam);
 
   if (field == FIELD_TOP)
@@ -985,10 +970,7 @@ void CLinuxRendererGLES::RenderToFBO(int index, int field)
 
   if (toneMapMethod != VS_TONEMAPMETHOD_OFF)
   {
-    if (buf.hasLightMetadata || (buf.hasDisplayMetadata && buf.displayMetadata.has_luminance))
-    {
-      toneMap = true;
-    }
+    toneMap = true;
   }
 
   if (toneMap != m_toneMap || m_toneMapMethod != toneMapMethod)
@@ -1055,9 +1037,8 @@ void CLinuxRendererGLES::RenderToFBO(int index, int field)
   pYUVShader->SetContrast(m_videoSettings.m_Contrast * 0.02f);
   pYUVShader->SetWidth(planes[0].texwidth);
   pYUVShader->SetHeight(planes[0].texheight);
-  pYUVShader->SetColParams(buf.m_srcColSpace, buf.m_srcBits, !buf.m_srcFullRange, buf.m_srcTextureBits);
-  pYUVShader->SetDisplayMetadata(buf.hasDisplayMetadata, buf.displayMetadata,
-                                 buf.hasLightMetadata, buf.lightMetadata);
+  pYUVShader->SetColParams(buf.m_srcColSpace, buf.m_srcBits, !buf.m_srcFullRange,
+                           buf.m_srcTextureBits);
   pYUVShader->SetToneMapParam(m_videoSettings.m_ToneMapParam);
 
   if (field == FIELD_TOP)
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.h b/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.h
index 8db3ed3b39829..ee6c6b4c7a9ba 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.h
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.h
@@ -21,10 +21,6 @@
 #include "RenderInfo.h"
 #include "windowing/GraphicContext.h"
 
-extern "C" {
-#include <libavutil/mastering_display_metadata.h>
-}
-
 class CRenderCapture;
 class CRenderSystemGLES;
 
@@ -179,11 +175,6 @@ class CLinuxRendererGLES : public CBaseRenderer
     int m_srcBits{8};
     int m_srcTextureBits{8};
     bool m_srcFullRange;
-
-    bool hasDisplayMetadata{false};
-    AVMasteringDisplayMetadata displayMetadata;
-    bool hasLightMetadata{false};
-    AVContentLightMetadata lightMetadata;
   };
 
   // YV12 decoder textures
